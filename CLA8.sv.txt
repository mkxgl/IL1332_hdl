// CLA Adder 8-bit
// Labb 1

module propagate_logicmodule

module generate_logic
	(
		input a,
		input b,
		output g
	);

	assign g = a & b;

endmodule
	(
		input logic a,
		input logic b,
		output p
	);

	assign p = a | b;

end

module sum_logic
	(
		input logic a,
		input logic b,
		input logic carry_in,
		output logic sum
	);

	// a xor b xor carry_in //
	assign sum = carry_in ^ (a ^ b); // according to the schematics Fig2

endmodule

module carry_logic_0
	(
		input logic p0,
		input logic g0,
		input logic carry_in0,
		output logic carry_out0
	);

	// (a and b) or (carry_in and (a or b));
	assign carry_out0 = g | (carry_in0 & p);
	// carry in = carry_out prev but since its a first carry it has no other right

endmodule

module nand5_delay
	(
		
	);